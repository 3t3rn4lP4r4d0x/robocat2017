/* Aquí està millor explicat, afegeixo els canvis
// http://howtomechatronics.com/tutorials/arduino/arduino-color-sensing-tutorial-tcs230-tcs3200-color-sensor/
// s0 i s1 controla la frequency - scaling,
//      s0 | s1
//      L  | L    : Power down
//      L  | H    : 2%
//      H  | L    : 20%
//      H  | H    : 100%
//
// combinacions
//      s2 | s3
//      L  | L    : red
//      L  | H    : blue
//      H  | L    : clear (no filter)
//      H  | H    : green */

// En aquestes dues pàgines
//      http://www.nongnu.org/avr-libc/user-manual/group__avr__interrupts.html
//      http://www.atmel.com/webdoc/AVRLibcReferenceManual/group__avr__interrupts.html
//      Està explicada la funció interrupt al microprocessador
//
// Aquesta pàgina també pot ser interessant
//  http://www.toptechboy.com/arduino/lesson-15-super-cool-arduino-color-sensor-project/
int s0=3,s1=4,s2=5,s3=6;
int flag=0;
int counter=0;
int countR=0,countG=0,countB=0;
//    Aquí tens per què utilitza el Serial.begin(250000) enlloc
//    del Serial.begin(9600)
//    http://playground.arduino.cc/Learning/DMXSerial

void setup()
{
Serial.begin(250000);
pinMode(s0,OUTPUT);
pinMode(s1,OUTPUT);
pinMode(s2,OUTPUT);
pinMode(s3,OUTPUT);
}
void TCS()
{
  digitalWrite(s1,HIGH);
  digitalWrite(s0,LOW);
  flag=0;
  attachInterrupt(0, ISR_INTO, CHANGE);
  timer2_init();
}
void ISR_INTO()
{
  counter++;
}

// Arduino timer interrupt
//  http://www.instructables.com/id/Arduino-Timer-Interrupts/
// http://popdevelop.com/2010/04/mastering-timer-interrupts-on-the-arduino/
//  I encara una més, que potser està més clara aquesta part
//  http://arduinomega.blogspot.com.es/2011/05/timer2-and-overflow-interrupt-lets-get.html
//
void timer2_init(void)
{
  TCCR2A=0x00;
  TCCR2B=0x07; //the clock frequency source 1024 points
  TCNT2= 100;    //10 ms overflow again
  TIMSK2 = 0x01; //allow interrupt
}
int i=0;
// INFO en https://aprendiendoarduino.wordpress.com/tag/isr/
ISR(TIMER2_OVF_vect)//the timer 2, 10ms interrupt overflow again. Internal overflow interrupt executive function
{
TCNT2=100;
flag++;
if(flag==1)
 {
   counter=0;
 }
else if(flag==2)
  {
   digitalWrite(s2,LOW);
   digitalWrite(s3,LOW);
   countR=counter/1.051;
   Serial.print("red=");
   Serial.println(countR,DEC);
   digitalWrite(s2,HIGH);
   digitalWrite(s3,HIGH);
  }
else if(flag==3)
   {
    countG=counter/1.0157;
   Serial.print("green=");
   Serial.println(countG,DEC);
    digitalWrite(s2,LOW);
    digitalWrite(s3,HIGH);
    }
else if(flag==4)
   {
    countB=counter/1.114;
   Serial.print("blue=");
   Serial.println(countB,DEC);
    digitalWrite(s2,LOW);
    digitalWrite(s3,LOW);
    }
else
    {
    flag=0;
     TIMSK2 = 0x00;
    }
    counter=0;
    delay(2);
}
void loop()
{
 delay(10);
 TCS();
  if((countR>10)||(countG>10)||(countB>10))
  {
    
     
       if ((countR>100)&&(countG>100)&&(countB>100))
       {
             Serial.print("white");
             Serial.print("\n");
             delay(1000);
        }
       else if ((countR>countG)&&(countR>countB))
        {
             Serial.print("orange");
             Serial.print("\n");
             delay(1000);
        }
      else if((countB>countG)&&(countB>countR))
       {
             Serial.print("blue");
             Serial.print("\n");
             delay(1000);
       }
      else
      {
          Serial.print("Black");
          Serial.print("\n");
          delay(1000);
      }
  }
}
     
    
    
  
