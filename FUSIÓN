//sensor de blanc o negre
int sensorbn1=2,sensorbn2=3,sensorbn4=4;
//driver
int IN1 = 5;
int IN2 = 6;
int IN3 = 7;    // Input3 conectada al pin 5
int IN4 = 8;    // Input4 conectada al pin 4 
int ENB = 9;
int ENA = 10;
//sensor de colors
int value;
int s0=11,s1=12,s2=13,s3=A0;
int flag=0;
int counter=0;
int countR=0,countG=0,countB=0;

void setup()
{
Serial.begin(250000);
pinMode(s0,OUTPUT);
pinMode(s1,OUTPUT);
pinMode(s2,OUTPUT);
pinMode(s3,OUTPUT);
}
void TCS()
{
  digitalWrite(s1,HIGH);
  digitalWrite(s0,LOW);
  flag=0;
  attachInterrupt(0, ISR_INTO, CHANGE);
  timer2_init();
}
void ISR_INTO()
{
  counter++;
}

// Arduino timer interrupt
//  http://www.instructables.com/id/Arduino-Timer-Interrupts/
// http://popdevelop.com/2010/04/mastering-timer-interrupts-on-the-arduino/
//  I encara una més, que potser està més clara aquesta part
//  http://arduinomega.blogspot.com.es/2011/05/timer2-and-overflow-interrupt-lets-get.html
//
void timer2_init(void)
{
  TCCR2A=0x00;
  TCCR2B=0x07; //the clock frequency source 1024 points
  TCNT2= 100;    //10 ms overflow again
  TIMSK2 = 0x01; //allow interrupt
}
int i=0;
// INFO en https://aprendiendoarduino.wordpress.com/tag/isr/
ISR(TIMER2_OVF_vect)//the timer 2, 10ms interrupt overflow again. Internal overflow interrupt executive function
{
TCNT2=100;
flag++;
if(flag==1)
 {
   counter=0;
 }
else if(flag==2)
  {
   digitalWrite(s2,LOW);
   digitalWrite(s3,LOW);
   countR=counter/1.051;
   Serial.print("red=");
   Serial.println(countR,DEC);
   digitalWrite(s2,HIGH);
   digitalWrite(s3,HIGH);
  }
else if(flag==3)
   {
    countG=counter/1.0157;
   Serial.print("green=");
   Serial.println(countG,DEC);
    digitalWrite(s2,LOW);
    digitalWrite(s3,HIGH);
    }
else if(flag==4)
   {
    countB=counter/1.114;
   Serial.print("blue=");
   Serial.println(countB,DEC);
    digitalWrite(s2,LOW);
    digitalWrite(s3,LOW);
    }
else
    {
    flag=0;
     TIMSK2 = 0x00;
    }
    counter=0;
    delay(2);
}
void loop()
{
 delay(10);
 TCS();
  if((countR>10)||(countG>10)||(countB>10))
  {
    
     
       if ((countR>100)&&(countG>100)&&(countB>100))
       {
             Serial.print("white");
             Serial.print("\n");
             delay(1000);
        }
       else if ((countR>countG)&&(countR>countB))
        {
             Serial.print("orange");
             Serial.print("\n");
             delay(1000);
        }
      else if((countB>countG)&&(countB>countR))
       {
             Serial.print("blue");
             Serial.print("\n");
             delay(1000);
       }
  }
  else
  {
      Serial.print("Black");
      Serial.print("\n");
      delay(1000);
  }
  

  value = digitalRead(pin1);  //lectura digital de pin
 
  //mandar mensaje a puerto serie en función del valor leido
  if (value == HIGH) {
      Serial.println("BLANCO1");
      delay(1000);
      analogWrite (ENA,0);
      analogWrite (ENB,0); 
      delay(1000);
  }

  //Preparamos la salida para que el motor gire en un sentido
  
  
  if(value == HIGH) {
      Serial.println("NEGRO1");
      delay(1000);
       analogWrite(ENB,255);
       analogWrite(ENA,255);
       delay(1000);
  }
  if(value == HIGH) {
      Serial.println("BLANCO2");
      delay(1000);
      analogWrite (ENA,0);
      analogWrite (ENB,0); 
      delay(1000);
  }

   
   if (value == HIGH) {
    Serial.println("NEGRO2");
    delay(1000);
    analogWrite(ENB,255);
    analogWrite(ENA,255);
    delay(1000);
      }

   if (value == HIGH) {
      Serial.println("BLANCO3");
      delay(1000);
      analogWrite (ENA,0);
      analogWrite (ENB,0); 
      delay(1000);
   }      
       // Aplicamos PWM al pin ENB, haciendo girar el motor, cada 2 seg aumenta la velocidad
  

    if (value == HIGH) {
      Serial.println("NEGRO3");
      delay(1000);
      analogWrite (ENA,255);
      analogWrite (ENB,255); 
      delay(1000);
    }
}

  
  
   
